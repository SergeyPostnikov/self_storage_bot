import os
from dotenv import load_dotenv
import asyncio

from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ContentTypes

from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text, ContentTypeFilter
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ChatActions, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import Contact

load_dotenv()
tg_token = os.getenv('TG_BOT_TOKEN')
bot = Bot(token=tg_token)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)


class D(StatesGroup):
    contact = State()


async def on_startup(_):
    pass


def main_keyboard():
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.InlineKeyboardButton(text='*Ô∏è‚É£ –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='support'),
        types.InlineKeyboardButton(text='‚ùì F.A.Q', callback_data='faq'),
        types.InlineKeyboardButton(text='üéí –ó–∞–±—Ä–∞—Ç—å –≤–µ—â–∏', callback_data='get_back'),
        types.InlineKeyboardButton(text='‚úç –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data='application'),
        types.InlineKeyboardButton(text='üì¶ –ú–æ–∏ –±–æ–∫—Å—ã', callback_data='my_boxes'),
    ]
    keyboard.add(*buttons)
    return keyboard


def next_main_keyboard():
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel'),
        types.InlineKeyboardButton(text='üîß –ó–∞–±—Ä–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º', callback_data='by_runner'),
        types.InlineKeyboardButton(text='üöô –ó–∞–±–µ—Ä—É –ª–∏—á–Ω–æ', callback_data='by_myself'),
    ]
    keyboard.add(*buttons)
    return keyboard


def giveaway():
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.InlineKeyboardButton(text='üì¶ –û—Å—Ç–∞–≤–∏—Ç—å –≤–µ—â–∏', callback_data='application'),
        types.InlineKeyboardButton(text='üéí –ó–∞–±—Ä–∞—Ç—å –≤–µ—â–∏', callback_data='get_back')
    ]
    keyboard.add(*buttons)
    return keyboard


def next_keyboard():
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.InlineKeyboardButton(text='‚úç –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data='application'),
        types.InlineKeyboardButton(text='‚¨ÖÔ∏è –û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é', callback_data='back_to_menu'),
    ]
    keyboard.add(*buttons)
    return keyboard


def choose_del():
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.InlineKeyboardButton(text='‚¨ÖÔ∏è –û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é', callback_data='back_to_menu'),
        types.InlineKeyboardButton(text='üîß –ü–æ–∑–≤–∞—Ç—å –∫—É—Ä—å–µ—Ä–∞', callback_data='runner'),
        types.InlineKeyboardButton(text='üöô –û—Ç–≤–µ–∑—É —Å–∞–º', callback_data='myself'),
        types.InlineKeyboardButton(text='*Ô∏è‚É£ –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='support'),
        types.InlineKeyboardButton(text='‚ùì F.A.Q', callback_data='faq')
    ]
    keyboard.add(*buttons)
    return keyboard


def request_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True))
    return keyboard


@dp.callback_query_handler(text='faq')
async def send_faq(call: types.CallbackQuery):
    faq = """
1. –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞—è–≤–∫—É, –∏—Å–ø–æ–ª—å–∑—É—è –±–æ—Ç–∞.
2. –ú—ã —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ, –∏—Å—Ö–æ–¥—è –∏–∑ –æ–±—ä–µ–º–∞ –≤–µ—â–µ–π.
3. –í —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∫ –≤–∞–º –ø—Ä–∏–µ–¥–µ—Ç –∫–æ–º–∞–Ω–¥–∞ –º—É–≤–µ—Ä–æ–≤, —É–ø–∞–∫—É–µ—Ç –≤–µ—â–∏, –≤—ã–Ω–µ—Å–µ—Ç –∏ –æ—Ç–≤–µ–∑—ë—Ç –∏—Ö –Ω–∞ —Å–∫–ª–∞–¥ –∏–ª–∏ –Ω–∞ –≤–∞—à–µ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞.
4. –ö–æ–≥–¥–∞ –∫–∞–∫–∞—è-—Ç–æ –≤–µ—â—å —Å–Ω–æ–≤–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è, –∑–∞–∫–∞–∂–∏—Ç–µ –≤–æ–∑–≤—Ä–∞—Ç, –∏ –º—ã –ø—Ä–∏–≤–µ–∑–µ–º –µ—ë –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –ú–æ—Å–∫–≤—ã.
5. –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, \
—á—Ç–æ –≤—ã –ø–ª–∞—Ç–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–æ—Ç –æ–±—ä–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–π —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∑–∞–Ω–∏–º–∞—é—Ç –≤–∞—à–∏ –≤–µ—â–∏, –∞ –Ω–µ –∑–∞ –≤–µ—Å—å –æ–±—ä–µ–º –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è.
6. –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å–ª—É–≥—É –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞—à–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —É–ø–∞–∫–æ–≤–æ—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. \
–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –º—É–≤–µ—Ä–æ–≤ —Å–æ–±–µ—Ä–µ—Ç, —É–ø–∞–∫—É–µ—Ç –∏ –º–∞—Ä–∫–∏—Ä—É–µ—Ç –≤—Å–µ –≤–∞—à–∏ –≤–µ—â–∏, –∞ –∑–∞—Ç–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Ö –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥. –í—Å–µ –≤–µ—â–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–∞–ª–ª–µ—Ç–∞—Ö –≤ –Ω–∞–¥–µ–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö. \
–ù–∞—à —Å–∫–ª–∞–¥ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç—Å—è –≤–∏–¥–µ–æ–∫–∞–º–µ—Ä–∞–º–∏ –±–µ–∑ —Å–ª–µ–ø—ã—Ö –∑–æ–Ω, –∏ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.
7. –í—ã –º–æ–∂–µ—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –≤–µ—â–∏ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞. \
–¢–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –≤–µ—â–µ–π –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –≤–µ—â–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è. \
–í—Å–µ –≤–∞—à–∏ –≤–µ—â–∏ –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
    """
    await call.message.answer(faq, reply_markup=next_keyboard())


@dp.callback_query_handler(text='price')
async def send_price(call: types.CallbackQuery):
    price_list = """
–®–∏–Ω—ã –∏–ª–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥: –æ—Ç 749 —Ä—É–±. –≤ –º–µ—Å—è—Ü
–ú–∞–ª–æ –≤–µ—â–µ–π: –æ—Ç 1 490 —Ä—É–±. –≤ –º–µ—Å—è—Ü
–ú–Ω–æ–≥–æ –≤–µ—â–µ–π: –æ—Ç 8 190 —Ä—É–±. –≤ –º–µ—Å—è—Ü
C–¥–∞—á–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤–µ—â–µ–π: –±–µ—Å–ø–ª–∞—Ç–Ω–æ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞ 1 490 —Ä. –∑–∞ 1 –º¬≥."""
    await call.message.answer(price_list, reply_markup=next_keyboard())


@dp.callback_query_handler(text='back_to_menu')
async def back_to_menu(call: types.CallbackQuery):
    await call.message.answer(text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é', reply_markup=main_keyboard())


@dp.callback_query_handler(text='application')
async def leave_a_request(call: types.CallbackQuery):
    await call.message.answer('–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', reply_markup=request_keyboard())
    await D.contact.set()


@dp.message_handler(commands=['start'])
async def start(msg: types.Message):
    text = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! 
–ú—ã –∫–æ–º–ø–∞–Ω–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –º–∞–ª–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è —Å–µ–∑–æ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–µ—â–µ–π.
–ù–∞–ø—Ä–∏–º–µ—Ä –≤–µ–ª–æ—Å–∏–ø–µ–¥—ã, –∫–∞—è–∫–∏, c–Ω–µ–≥–æ—Ö–æ–¥—ã. 
–ú—ã –∑–∞–±–µ—Ä—ë–º –≤–∞—à–∏ –≤–µ—â–∏ –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥, —Å–æ—Ö—Ä–∞–Ω–∏–º –∏ –ø—Ä–∏–≤–µ–∑—ë–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –ú–æ—Å–∫–≤—ã.
–î–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å —Ä–∞–∑–¥–µ–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá
        """
    await msg.answer(text, reply_markup=main_keyboard())


if __name__ == '__main__':
    executor.start_polling(dp,
                           skip_updates=True,
                           on_startup=on_startup)